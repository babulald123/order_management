c
message
c
data['restaurant_id']
data = JSON.parse(message.value)
data['restaurant_id']
 data = JSON.parse(message.value)
JSON.parse(message.value)
JSON.parse(message)
message
c
message
c
Kafka.new('localhost:9092', client_id: "restaurant-order-system")
c
ENV['KAFKA_BROKERS']
Kafka.new(ENV['KAFKA_BROKERS'])
Kafka.new(ENV['KAFKA_BROKERS']
KAFKA_BROKERS
ENV['KAFKA_BROKERS']
c
KafkaClient.instance.each_message(topic: "new_orders")
KafkaClient
c
OrderSerializer.new(@order).serializable_hash[:data]
OrderSerializer.new(@order).serializable_hash[:data][:attributes]
c
OrderSerializer.new(@order).serializable_hash[:data][:attributes]
reload
OrderSerializer.new(@order).serializable_hash[:data][:attributes]
OrderSerializer.new(@order).serializable_hashOrderSerializer.new(@order).serializable_hash[:data][:attributes]
OrderSerializer.new(@order).serializable_hash
c
order_items.sum { |item| item.quantity * item.menu.price }
order_items.sum('quantity * menus.price')
order_items.sum('quantity * price')
order_items
Restaurant
c
@order.save!
c
@order = @user.orders.new(order_params)
def order_params
    params.require(:order).permit(:restaurant_id, order_items_attributes: %i[menu_id quantity])
  end
@order = @user.orders.new(order_params)
@order
params
c
Menu.last
@order.order_items
params
c
@order.save!
@order.total = @order.order_items.sum { |item| item.quantity * item.menu.price }
 @order.order_items
c
 @order.order_items
@order = @user.orders.new(order_params)
c
@order = @user.orders.new(order_params)
order_params
params
c
order_params
params
c
cart_items
@order
c
hshhshs
